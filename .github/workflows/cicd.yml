# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support 
# documentation.

name: CI-CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: |
              cd task-1-java-backend-api
              mvn clean package
    

      - name: Run Unit Tests
        run: |
              cd task-1-java-backend-api
              mvn test
        

  docker-build:
    name: Docker Build & Push
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: |
              cd task-1-java-backend-api
              echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: |
              cd task-1-java-backend-api
              docker build -t myapp:latest .

      - name: Tag Docker Image
        run: |
              cd task-1-java-backend-api
              docker tag myapp:latest bsnanda27/task-api:latest

      - name: Push to Docker Hub
        run: |
              docker push bsnanda27/task-api:latest

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3

      - name: Deploy to Kubernetes
        run: |
              cd task-1-java-backend-api
              kubectl apply -f k8s/deployment.yaml
              kubectl rollout status deployment task-api-deployment
